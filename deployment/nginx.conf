# Nginx configuration for Khyber Shawls
# Replace 'yourdomain.com' with your actual domain name

# HTTP server - redirects to HTTPS (after certbot runs)
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.com www.yourdomain.com;

    # Allow Certbot to verify domain
    location ^~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/html;
    }

    # Redirect all HTTP traffic to HTTPS (uncomment after SSL setup)
    # return 301 https://$server_name$request_uri;
}

# HTTPS server (certbot will configure this)
# Uncomment after running certbot
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name yourdomain.com www.yourdomain.com;

#     # SSL certificates (certbot will add these)
#     # ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
#     # ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;

#     # Security headers
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "no-referrer-when-downgrade" always;

#     # Gzip compression
#     gzip on;
#     gzip_vary on;
#     gzip_min_length 1024;
#     gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/javascript application/xml+rss application/json image/svg+xml;

#     # Client max body size (for file uploads)
#     client_max_body_size 20M;

#     # Proxy settings
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_cache_bypass $http_upgrade;

#     # Next.js static files
#     location /_next/static {
#         proxy_cache_valid 60m;
#         proxy_pass http://localhost:3000;
#         add_header Cache-Control "public, max-age=31536000, immutable";
#     }

#     # Next.js image optimization
#     location /_next/image {
#         proxy_pass http://localhost:3000;
#         add_header Cache-Control "public, max-age=31536000, immutable";
#     }

#     # Uploaded files
#     location /uploads {
#         proxy_pass http://localhost:3000;
#         add_header Cache-Control "public, max-age=31536000";
#     }

#     # Public static files
#     location /public {
#         proxy_pass http://localhost:3000;
#         add_header Cache-Control "public, max-age=31536000";
#     }

#     # API routes
#     location /api {
#         proxy_pass http://localhost:3000;
#     }

#     # All other requests
#     location / {
#         proxy_pass http://localhost:3000;
#     }
# }

# Temporary configuration before SSL setup
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.com www.yourdomain.com;

    client_max_body_size 20M;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
